@{
    Layout = "~/Views/Shared/CliLayout.cshtml";
}
<div id="maindiv" class="container">
    <ul class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="/CH/index">首頁</a>
        </li>
        <li class="breadcrumb-item">帳戶總覽</li>
        <li class="breadcrumb-item active">
            <a href="#">帳戶資金一覽</a>
        </li>
    </ul>
    <section id="title">
        <div class="title-set">
            <h4 class="title">帳戶資金一覽</h4>
        </div>
    </section>
    <section id="form">
        <div class="overflow">
            <table class="table table-bordered table-hover" id="theTable"></table>
        </div>
    </section>
</div>
<script>
    //權限設定
    var cliRole = readCookie('cliRole');
    var cliAccount = readCookie('cliAccount');

    $(document).ready(function () {
        $('#maindiv').jqLoading();
        loadData();
        $('#maindiv').jqLoading("destroy");
    });

    function loadData() {
        var apiURL = "/Deposite/GetCliDepositeStatus/";
        $("#theTable").bootstrapTable('destroy');
        $("#theTable").bootstrapTable({
            columns: [
                {
                    field: 'Deposit_Type', title: '案別', align: 'center', halign: 'center', visible: true, sortable: true,
                    footerFormatter: function (value) {
                        return '合計';
                    }
                },
                {
                    field: 'Deposit',
                    title: '累積入金',
                    formatter: function (value, row, index) {
                        return toThousands(eval(value).toFixed(2));
                    },
                    footerFormatter: function (value) {

                        var count = 0;
                        for (var i in value) {
                            count += eval(value[i].Deposit);
                        }
                        return toThousands(eval(count).toFixed(2));
                    },
                    halign: 'center',
                    align: 'center',
                    visible: true
                },
                {
                    field: 'Withdrawal',
                    title: '累積出金',
                    formatter: function (value, row, index) {
                        return toThousands(eval(value).toFixed(2));
                    },
                    footerFormatter: function (value) {

                        var count = 0;
                        for (var i in value) {
                            count += eval(value[i].Withdrawal);
                        }
                        return toThousands(eval(count).toFixed(2));
                    },
                    halign: 'center',
                    align: 'center',
                    visible: true
                },
                {
                    field: 'NetDeposit',
                    title: '淨入金(入-出)',
                    formatter: function (value, row, index) {
                        return toThousands(eval(value).toFixed(2));
                    },
                    footerFormatter: function (value) {

                        var count = 0;
                        for (var i in value) {
                            count += eval(value[i].NetDeposit);
                        }
                        return toThousands(eval(count).toFixed(2));
                    },
                    halign: 'center',
                    align: 'center',
                    visible: true
                }
            ],
            classes: 'table table-striped table-hover ',
            url: apiURL,
            method: "Get",
            queryParams: { CliID: cliAccount },
            dataType: "json",
            contentType: 'application/json,charset=utf-8',
            toolbar: "#toolbar",
            uniqueId: 'ID',
            //sortName:'id',
            //height: 520,
            pagination: true,
            ajaxOptions: "ajaxOptions",
            inlineEditing: true,
            showFooter: true,
            clickToSelect: true,
            singleSelect: true,
            height: 200,
            onPageChange: function (currentPage, pageSize) {
                console.log("目前頁數:" + currentPage + ",一頁顯示:" + pageSize + "筆");
            },
            pageSize: 10,
            pageList: [10, 20, 50, 100],
            onLoadSuccess: function (data) {
            },
            onLoadError: function (res) {
            },
            formatRecordsPerPage: function (pageSize) {
                return '&nbsp;&nbsp;每頁顯示' + pageSize + '筆';
            },
            formatShowingRows: function (fromIndex, toIndex, totalSize) {
                var currentPage = Math.ceil(fromIndex / this.pageSize);
                var totalPageCount = Math.ceil(totalSize / this.pageSize);
                //return '第' + currentPage + '頁&nbsp;&nbsp;共' + totalPageCount + '頁' + '總共' + totalSize + '筆資料';
            }

        });
    }
</script>